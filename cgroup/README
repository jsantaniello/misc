These scripts are to provide a Tornado specific interface to Linux cgroups.

The host system requires libcgroup1 and cgroups-bin, but make sure to disable any services such as cgroup-lite as we handle all that stuff ourselves. The inotify-tools package is also required.

Subsystems for which cgroup should be configured to and mounted are specified by .conf file in the "controllers" directory. The files are named after the cgroup subsystem they are for. The format is parameter name, as defined by kernel, and a default value for the "catchall" group. For example the "memory.conf" file contains:

limit_in_bytes=3G

Which indicates that the memory subsystem should be mounted, and the catchall group which the cgrulesengd will assign non-specified users's processes to will be allocated 3 Gb of memory.

The script "setupcgroups" should be run from rc.local or similar. It mounts the cgroup tempfs, and sets up cgroups as per the conf files found in the "groups" directory. The script doesn't clobber or remove and pre-mounted cgroups, so cgclear should be run first if you want to start things from scratch.

The script "monitorcgroups" is to be run as a daemon (working on up-start stuff now) and it is in charge of tracking changes to the conf files in the groups directory and updating the mounted cgroup parameters, and/or removing deleted cgroups. There is no polling; inotifywait is used to be notified by kernel when changes are made to the groups directory.

The "configcgroup" script is the interface to the system. It is used to create the conf files found in the groups directory. It does this by running the scripts found in the "generators" directory. These scripts are each responsible for a specific parameter to be limited or garnteed. For example "max_cpu". The generator scripts contain the base unit for each particular type of "share". For example the max_memory generator specifes a base unit of 512Mb.

To create or update a cgroup for a user, the configcgroup script should be executed with the name of the user/cgroup and optional factor parameters:

configcgroup --name webuser1234

Would create a cgroup webuser1234 with the default base parameters. In particular 512Mb RAM, 25% of a single core CPU, and 1024 weight of minimum CPU shares.

Optionally, factor may be spcified for these parameters if the user/cgroup is to have non-default limits:

configcgroup --name webuser1234 --max_cpu 2 --min_memory 2

Which means the user/cgroup webuser1234 should be allocated 2x the default amount of max_cpu (50% of a single core), and 2x the default of RAM (1024Mb).


