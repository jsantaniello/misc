#!/bin/bash
# This script is used to mount and dismount cgroup controllers and groups
# based on config files found in controllers and groups with .conf files.
# It does not interfere with other cgroup mounts and should play nice with
# other things potentially going on. If any permanent changes are desired
# for /etc/cgrules.conf, they should be made in /etc/cgrules.conf.footer
# because cgrules.conf is overwritten with data gleaned from the .conf
# files used by this script. Joseph Santaniello <js@syse.no> 2013-02-13

# cd to where we want to be so subdirs are where we expect.
cd "$(dirname ${BASH_SOURCE[0]})"

# Source our common functions
. common.sh

CG=/sys/fs/cgroup

# Mount the cgroup temp fs
if ! grep -q "^cgroup $CG" /proc/mounts ; then
	mount -t tmpfs -o uid=0,gid=0,mode=0755 cgroup $CG
fi

# Setup the controllers. Desired controllers should be in the
# controllers dir with controller_name.conf and contain the
# defaults for that subsystem.
for f in controllers/*.conf; do
	c="$(basename $f .conf)"
	# See if this controller is already mounted
	if [ `lssubsys -m $c | wc -l` -lt 1 ]; then
		mkdir -p $CG/$c
		mount -n -t cgroup -o $c $c $CG/$c
	fi
	# Make a "default" group to be used as cgrules.conf "catchall"
	mkdir -p $CG/$c/catchall
	# Push in defaults
	for LINE in `grep -v "#" $f`; do
		read NAME VALUE <<<$(echo $LINE|tr -s "=" " ")
		echo $VALUE > $CG/$c/catchall/$c.$NAME
	done
done

# Clean out the cgrules generated confs
rm cgrules/*  > /dev/null 2>&1

# Get list of group confs
for f in groups/*.conf; do
	# Run it through our sorced create function
	create $f
done

# Remove disabled groups
for f in groups/*.disabled; do
	delete $f
done

# And make a new cgrules.conf
construct_cgrules

# This is ugly... but we don't have to deal with PID and flaky SIGUSR2.
killall cgrulesengd > /dev/null 2>&1; cgrulesengd

